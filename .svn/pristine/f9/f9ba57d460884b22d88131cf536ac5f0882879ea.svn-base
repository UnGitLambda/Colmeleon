# -*- coding: utf-8 -*-
"""
@author: L3F1
"""

import Image
import os
import sys
sys.path.insert(0,f"{os.path.abspath('..')}")
import PIL
from Histogram import Histogram

while(f"{os.path.abspath('..')}" in sys.path):
    sys.path.remove(f"{os.path.abspath('..')}")

class Parser:
    def _parse(file):
        """
        The path to the file is given as a String.
        """
        assert type(file) is str
        assert file.endswith("png") or file.endswith("pdf") or file.endswith("jpg") or file.endswith("jpeg") or file.endswith("bmp") or file.endswith("gif")
        assert os.path.exists(file)
        return(PIL.Image.open(file))

    def scale_image(img):
        assert type(img) is Image.Image, f"Parser : the scaling function takes an image as argument and not {type(img)}"
        scale = min(512/img.width,256/img.height)
        return img.resize((int(scale*img.width), int(scale*img.height)))

    def _color_constancy(hist):
        assert type(hist) is Histogram
        constancy = hist.redHistogram + hist.grennHistogram + hist.blueHistogram
        tmpR = hist.redHistogram / constancy
        return(tmpR)
    
    def parse(file):
        """
        The path to the file is given as a String.
        """
        assert type(file) is str
        assert file.endswith("png") or file.endswith("pdf") or file.endswith("jpg") or file.endswith("jpeg") or file.endswith("bmp") or file.endswith("gif")
        assert os.path.exists(file)
        return(Parser._parse(file))