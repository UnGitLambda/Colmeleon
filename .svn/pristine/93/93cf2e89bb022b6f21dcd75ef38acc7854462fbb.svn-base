import numpy as np
import matplotlib.pyplot as plt
import cv2

class Histogram:
    """Class reprensenting histogram, by default, it instantiate a ColorHistogram"""
    def __init__(self, img, path,bins=256, grey = False):
        self.image = img
        self.image_array = 255 - np.asarray(self.image)
        self.bins = bins
        h,s,v = cv2.split(cv2.cvtColor(cv2.imread(path),cv2.COLOR_BGR2HSV))
        if grey or (s==0).all() :
            self.histograms =  GreyHistogram(self.image_array)
        else :
            self.histograms = ColorHistogram(self.image_array)
            
class GreyHistogram(Histogram) :
    """Class reprensenting the case of a histogram in greyscale"""
    def __init__(self, img):
        self.greyHistogram = plt.hist(img[:,:,0].flatten()*255,range=[0,256], color = "grey", alpha = 0.5, bins = 256)
        
    def get_grey(self):
        """Return a list of all bins value of the greyscale"""
        return self.greyHistogram[0].astype(int)
    
    def set_grey(self, hist):
        """Modify the list of all bins value of teh greyscale with the list passing in argument"""
        self.greyHistogram[0] = hist
        
class ColorHistogram(Histogram) :
    """Class reprensenting the three colored histograms, red, green and blue"""
    def __init__(self, img):
        self.redHistogram = plt.hist(img[:,:,0].flatten()*255,range=[0,255], color = "red", alpha = 0.5, bins = 256)
        self.greenHistogram = plt.hist(img[:,:,1].flatten()*255,range=[0,255], color = "green", alpha = 0.5, bins = 256)
        self.blueHistogram = plt.hist(img[:,:,2].flatten()*255,range=[0,255], color = "blue", alpha = 0.5, bins = 256)

    
    def get_red(self):
        """Return a list of all bins value of the color red"""
        return self.redHistogram[0].astype(int)
    
    def get_green(self):
        """Return a list of all bins value of the color green"""
        return self.greenHistogram[0].astype(int)
        
    def get_blue(self):
        """Return a list of all bins value of the color blue"""
        return self.blueHistogram[0].astype(int)
    
    def set_red(self, hist):
        """Modify the list of all bins value of the color red with the list passing in argument"""
        self.redHistogram[0] = hist
        
    def set_green(self, hist):
        """Modify the list of all bins value of the color green with the list passing in argument"""
        self.greenHistogram[0] = hist
        
    def set_blue(self, hist):
        """Modify the list of all bins value of the color blue with the list passing in argument"""
        self.blueHistogram[0] = hist