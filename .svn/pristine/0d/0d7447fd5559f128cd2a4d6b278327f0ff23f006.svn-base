#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import numpy as np
import matplotlib.pyplot as plt
import cv2

class Histogram:
    """
    ===========================================================================
    Class reprensenting histogram, by default, it instantiate a ColorHistogram
    ===========================================================================
    """
    def __init__(self, img,bins=255, grey = False):
        self.image = img
        self.image_array = np.asarray(self.image.getimg())
        self.bins = bins
        h,s,v = cv2.split(cv2.cvtColor(cv2.imread(img.getpath()),
                                        cv2.COLOR_BGR2HSV))
        if grey or (s==0).all() :
            self.histograms =  GreyHistogram(self.image_array, self.bins)
        else :
            self.histograms = ColorHistogram(self.image_array, self.bins)
            
    def __hash__(self) -> int:
        """
        =======================================================================
        Return the hash value of the histogram subclass
        =======================================================================
        Returns :
            The hash number associated to this object
        """
        return(hash(self.histograms))
            
class GreyHistogram(Histogram) :
    """
    ===========================================================================
    Class reprensenting the case of a histogram in greyscale
    ===========================================================================
    """
    def __init__(self, img_array, bins):
        grey = cv2.cvtColor(img_array, cv2.COLOR_BGR2GRAY)
        self.greyHistogram = plt.hist(grey[:,:].flatten(),range=[0,256], 
                                      color = "grey", 
                                      alpha = 0.5, 
                                      bins = bins)
        
    def get_grey(self) -> np.array:
        """
        =======================================================================
        Return a list of all bins value of the greyscale
        =======================================================================
        Returns :
            The list of the bins value of grey
        """
        return self.greyHistogram[0].astype(int)
    
    def set_grey(self, hist)-> None:
        """
        =======================================================================
        Modify the list of all bins value of the greyscale with the list 
        passing in argument
        =======================================================================
        Arguments:
            hist : the list replacing the current histogram's list
        """
        self.greyHistogram[0] = hist
        
    def __hash__(self) -> int:
        """
        =======================================================================
        Create and return the hash value of the GreyHistogram
        =======================================================================
        Returns :
            The hash number associated to this object
        """
        res = 0
        grey = self.get_grey()
        for i in range(len(grey)):
            res += i*grey[i]
        return int(res)
            
        
class ColorHistogram(Histogram) :
    """
    ===========================================================================
    Class reprensenting the three colored histograms, red, green and blue
    ===========================================================================
    """
    def __init__(self, img_array, bins):
        self.redHistogram = plt.hist(img_array[:,:,0].flatten(),range=[0,255], 
                                     color = "red", 
                                     alpha = 0.5, 
                                     bins = bins)
        self.greenHistogram = plt.hist(img_array[:,:,1].flatten(),
                                       range=[0,255], 
                                       color = "green", 
                                       alpha = 0.5, 
                                       bins = bins)
        self.blueHistogram = plt.hist(img_array[:,:,2].flatten(),
                                      range=[0,255], 
                                      color = "blue", 
                                      alpha = 0.5, 
                                      bins = bins)
        
    
    def get_red(self)-> np.array:
        """
        =======================================================================
        Return a list of all bins value of the color red
        =======================================================================
        Returns :
            The list of the bins value of red
        """
        return self.redHistogram[0].astype(int)
    
    def get_green(self)-> np.array:
        """
        =======================================================================
        Return a list of all bins value of the color green
        =======================================================================
        Returns :
            The list of the bins value of green
        """
        return self.greenHistogram[0].astype(int)
        
    def get_blue(self) -> np.array:
        """
        =======================================================================
        Return a list of all bins value of the color blue
        =======================================================================
        Returns :
            The list of the bins value of blue
        """
        return self.blueHistogram[0].astype(int)
    
    def set_red(self, hist) -> None:
        """
        =======================================================================
        Modify the list of all bins value of the color red with the 
        list passing in argument
        =======================================================================
        Arguments:
            hist : the list replacing the current red histogram's list
        """
        self.redHistogram[0] = hist
        
    def set_green(self, hist) -> None:
        """
        =======================================================================
        Modify the list of all bins value of the color green with the 
        list passing in argument
        =======================================================================
        Arguments:
            hist : the list replacing the current green histogram's list
        """
        self.greenHistogram[0] = hist
        
    def set_blue(self, hist) -> None:
        """
        =======================================================================
        Modify the list of all bins value of the color blue with the 
        list passing in argument
        =======================================================================
        Arguments:
            hist : the list replacing the current blue histogram's list
        """
        self.blueHistogram[0] = hist
        
    def __hash__(self) -> int:
        """
        =======================================================================
        Create and return the hash value of the ColorHistogram
        =======================================================================
        Returns :
            The hash number associated to this object
        """
        res = 0
        red = self.get_red()
        blue = self.get_blue()
        green = self.get_green()
        for i in range(len(red)):
            res += i*red[i] + i*blue[i] + i*green[i]
        return int(res)


